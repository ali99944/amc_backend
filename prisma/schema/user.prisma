enum Gender {
  male
  female
  other
}


model users {
  id              Int            @id @default(autoincrement())
  name            String
  email           String         @unique
  password        String         // Hashed with Argon2
  joined_at       DateTime       @default(now())
  updated_at      DateTime?      @updatedAt
  activated_at    DateTime?
  last_login_time DateTime?
  birth_date      DateTime
  gender          Gender
  profile_picture String?
  phone_number    String?
  deleted_at      DateTime?
  is_banned       Boolean        @default(false)
  is_active       Boolean        @default(false)
  settings        user_settings?

  is_onboarded Boolean @default(false)


  genre_interests user_genre_interests[]
  artist_interests user_artist_interests[]


  user_listen_history user_listen_history[]
  user_sessions user_sessions[]
  playlists playlists[]

  user_song_likes user_song_likes[]
  following_artists artist_followers[]

  song_play_history song_play[]

  user_song_favorites user_song_favorites[]
}


model verification_codes {
  id              Int       @id @default(autoincrement())
  activation_code String    // OTP for activation or password reset
  email           String
  type            String    // 'activation' or 'password_reset'
  sent_at         DateTime  @default(now())
  expires_at      DateTime  // OTP expiration
}

model user_song_likes {
  id         Int      @id @default(autoincrement())
  user_id    Int
  song_id    Int
  created_at DateTime @default(now())
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  song       songs    @relation(fields: [song_id], references: [id], onDelete: Cascade)

  @@unique([user_id, song_id]) // Prevent duplicate likes
}

model user_song_favorites {
  id         Int      @id @default(autoincrement())
  user_id    Int
  song_id    Int
  created_at DateTime @default(now())
  user       users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  song       songs    @relation(fields: [song_id], references: [id], onDelete: Cascade)

  @@unique([user_id, song_id]) // Prevent duplicate favorites
}
