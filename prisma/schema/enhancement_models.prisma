// // RECOMMENDATION SYSTEM MODELS
// model user_recommendations {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   // Content recommendations
//   song_id Int?
//   song songs? @relation(fields: [song_id], references: [id])
  
//   artist_id Int?
//   artist artists? @relation(fields: [artist_id], references: [id])
  
//   album_id Int?
//   album albums? @relation(fields: [album_id], references: [id])
  
//   podcast_id Int?
//   podcast podcast_seasons? @relation(fields: [podcast_id], references: [id])
  
//   // Recommendation metadata
//   score Float // Relevance score
//   reason String // Why this was recommended
//   is_viewed Boolean @default(false)
//   is_clicked Boolean @default(false)
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@index([user_id])
//   @@index([song_id])
//   @@index([artist_id])
//   @@index([album_id])
//   @@index([podcast_id])
// }

// model content_similarity {
//   id Int @id @default(autoincrement())
  
//   // Content pairs
//   source_song_id Int?
//   target_song_id Int?
  
//   source_artist_id Int?
//   target_artist_id Int?
  
//   // Similarity metrics
//   similarity_score Float
//   similarity_type String // acoustic, lyrical, genre, etc.
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@index([source_song_id, target_song_id])
//   @@index([source_artist_id, target_artist_id])
// }

// // ANALYTICS AND REPORTING MODELS
// model user_activity_logs {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   activity_type String // play, like, follow, search, etc.
//   content_type String? // song, artist, album, playlist, etc.
//   content_id Int? // ID of the content
//   metadata Json? // Additional activity data
  
//   session_id String?
//   ip_address String?
//   device_info String?
  
//   created_at DateTime @default(now())
  
//   @@index([user_id])
//   @@index([activity_type])
//   @@index([created_at])
// }

// model content_analytics {
//   id Int @id @default(autoincrement())
  
//   // Content reference
//   content_type String // song, artist, album, playlist, podcast
//   content_id Int
  
//   // Time period
//   date DateTime
  
//   // Metrics
//   plays Int @default(0)
//   unique_listeners Int @default(0)
//   likes Int @default(0)
//   shares Int @default(0)
//   avg_completion_rate Float? // For songs/podcasts
//   skip_rate Float? // For songs/podcasts
  
//   // Demographics
//   demographics Json? // Age groups, genders, locations
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@unique([content_type, content_id, date])
//   @@index([content_type, content_id])
//   @@index([date])
// }

// model user_retention {
//   id Int @id @default(autoincrement())
  
//   // Time period
//   date DateTime
  
//   // Metrics
//   total_users Int
//   active_users Int
//   new_users Int
//   returning_users Int
//   churned_users Int
  
//   // Retention rates
//   day1_retention Float?
//   day7_retention Float?
//   day30_retention Float?
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@unique([date])
// }

// // LOCALIZATION AND INTERNATIONALIZATION MODELS
// model languages {
//   id Int @id @default(autoincrement())
//   code String @unique // e.g., en, ar, fr
//   name String // e.g., English, Arabic, French
//   is_active Boolean @default(true)
//   is_default Boolean @default(false)
  
//   // Relationships
//   translations content_translations[]
//   user_preferences user_settings[]
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
// }

// model content_translations {
//   id Int @id @default(autoincrement())
  
//   // Language reference
//   language_id Int
//   language languages @relation(fields: [language_id], references: [id])
  
//   // Content reference
//   content_type String // song, artist, album, playlist, podcast
//   content_id Int
//   field_name String // title, description, lyrics, etc.
  
//   // Translation
//   translated_text String
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@unique([language_id, content_type, content_id, field_name])
//   @@index([language_id])
//   @@index([content_type, content_id])
// }

// // FEEDBACK AND SUPPORT MODELS
// model user_feedback {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   feedback_type String // bug, feature_request, content_issue, general
//   subject String
//   message String
//   rating Int? // 1-5 star rating
  
//   // Content reference (optional)
//   content_type String? // song, artist, album, playlist, podcast
//   content_id Int?
  
//   status String @default("pending") // pending, in_progress, resolved, closed
//   is_public Boolean @default(false)
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
//   resolved_at DateTime?
  
//   // Relationships
//   responses feedback_responses[]
  
//   @@index([user_id])
//   @@index([feedback_type])
//   @@index([status])
// }

// model feedback_responses {
//   id Int @id @default(autoincrement())
  
//   feedback_id Int
//   feedback user_feedback @relation(fields: [feedback_id], references: [id])
  
//   responder_type String // system, admin, user
//   responder_id Int? // ID of the responder (if admin or user)
  
//   message String
//   is_internal Boolean @default(false) // For admin notes
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@index([feedback_id])
// }

// // SOCIAL FEATURES MODELS
// model user_follows {
//   id Int @id @default(autoincrement())
  
//   follower_id Int
//   follower users @relation("follower", fields: [follower_id], references: [id])
  
//   following_id Int
//   following users @relation("following", fields: [following_id], references: [id])
  
//   followed_at DateTime @default(now())
  
//   @@unique([follower_id, following_id])
//   @@index([follower_id])
//   @@index([following_id])
// }

// model user_shares {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   // Content reference
//   content_type String // song, artist, album, playlist, podcast
//   content_id Int
  
//   // Share details
//   share_platform String // facebook, twitter, whatsapp, etc.
//   share_url String?
  
//   created_at DateTime @default(now())
  
//   @@index([user_id])
//   @@index([content_type, content_id])
// }

// // GAMIFICATION MODELS
// model user_achievements {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   achievement_id Int
//   achievement achievements @relation(fields: [achievement_id], references: [id])
  
//   unlocked_at DateTime @default(now())
  
//   @@unique([user_id, achievement_id])
//   @@index([user_id])
//   @@index([achievement_id])
// }

// model achievements {
//   id Int @id @default(autoincrement())
//   title String
//   description String
//   icon String?
//   points Int @default(0)
  
//   // Achievement criteria
//   criteria_type String // listen_count, playlist_create, follow_artists, etc.
//   criteria_value Int // Target value to unlock
  
//   is_active Boolean @default(true)
  
//   // Relationships
//   user_achievements user_achievements[]
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
  
//   @@index([criteria_type])
// }

// // CONTENT MANAGEMENT MODELS
// model content_tags {
//   id Int @id @default(autoincrement())
//   name String @unique
//   description String?
  
//   // Content relationships can be added as needed
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
// }

// model content_reports {
//   id Int @id @default(autoincrement())
//   user_id Int
//   user users @relation(fields: [user_id], references: [id])
  
//   // Content reference
//   content_type String // song, artist, album, playlist, podcast
//   content_id Int
  
//   // Report details
//   reason String // copyright, inappropriate, offensive, etc.
//   description String?
  
//   status String @default("pending") // pending, reviewed, actioned, dismissed
//   admin_notes String?
  
//   created_at DateTime @default(now())
//   updated_at DateTime? @updatedAt
//   resolved_at DateTime?
  
//   @@index([user_id])
//   @@index([content_type, content_id])
//   @@index([status])
// }